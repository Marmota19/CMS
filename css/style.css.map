{"version":3,"sources":["style.css","utils/_fonts.scss","utils/_normalize.scss","../bower_components/susy/sass/susy/language/susy/_box-sizing.scss","../bower_components/susy/sass/susy/output/support/_rem.scss","base/_typography.scss","utils/_variables.scss","utils/_colors.scss","utils/_mixins.scss","base/_tables.scss","base/_forms.scss","components/_main-menu.scss","../bower_components/breakpoint-sass/stylesheets/_breakpoint.scss","../bower_components/susy/sass/susy/language/susy/_span.scss","../bower_components/susy/sass/susy/output/shared/_direction.scss","../bower_components/susy/sass/susy/language/susy/_gutters.scss","components/_admin-main-menu.scss","components/_pages.scss","layout/_mycms.scss","../bower_components/susy/sass/susy/language/susy/_container.scss","../bower_components/susy/sass/susy/output/support/_clearfix.scss"],"names":[],"mappings":"AAAA,iBAAiB;AC0BjB,sFAAY;ACxBZ;EACE,wBAAuB;EACvB,2BAA0B;EAC1B,+BAA8B,EAC/B;;AAED;EACE,UAAS,EACV;;AAID;EACE,eAAc,EACf;;AAED;EACE,sBAAqB;EACrB,yBAAwB,EACzB;;AAED;EACE,cAAa;EACb,UAAS,EACV;;AFLD;EEQE,cAAa,EACd;;AAID;EACE,8BAA6B,EAK9B;EAND;IAII,WAAU,EACX;;AAKH;EACE,eAAc;EACd,gBAAe,EAChB;;AAID;EACE,0BAAyB,EAC1B;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,mBAAkB,EACnB;;AAED;EACE,iBAAgB;EAChB,YAAW,EACZ;;AAED;EACE,eAAc,EACf;;AAED;EACE,eAAc;EACd,eAAc;EACd,mBAAkB;EAClB,yBAAwB,EACzB;;AAED;EACE,eAAc,EACf;;AAED;EACE,WAAU,EACX;;AAID;EACE,UAAS,EACV;;AAED;EACE,iBAAgB,EACjB;;AAED;EACE,UAAS,EACV;;AAED;EACE,wBAAuB;EACvB,UAAS,EACV;;AAED;EACE,eAAc,EACf;;AAED;EACE,iCAAgC;EAChC,eAAc,EACf;;AAID;EACE,eAAc;EACd,cAAa;EACb,UAAS,EACV;;AAED;EACE,2BAA0B;EAC1B,gBAAe,EAChB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,kBAAiB;EACjB,qBAAoB,EAMrB;EARD;IAKI,UAAS;IACT,WAAU,EACX;;AAGH;EACE,oBAAmB,EA+BpB;EAhCD;IAII,2BAA0B;IAC1B,gBAAe,EAChB;EANH;IASI,uBAAsB;IACtB,WAAU,EACX;EAXH;IAeM,aAAY,EACb;EAhBL;IAoBI,8BAA6B;IAC7B,wBAAuB,EAKxB;IA1BH;MAwBM,yBAAwB,EACzB;EAzBL;IA6BI,UAAS;IACT,WAAU,EACX;;AAGH;EACE,iBAAgB,EACjB;;AAED;EACE,qBAAoB,EACrB;;AAED;EACE,eAAc,EACf;;AAED;EACE,yBAAwB;EACxB,cAAa;EACb,4BAA2B,EAC5B;;AAED;EACE,UAAS;EACT,WAAU,EACX;;AAID;EACE,0B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","file":"style.css","sourcesContent":["@charset \"UTF-8\";\n@import url(\"https://fonts.googleapis.com/css?family=Lato:300,300italic,400,700,900\");\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%; }\n\nbody {\n  margin: 0; }\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {\n  display: block; }\n\naudio, canvas, progress, video {\n  display: inline-block;\n  vertical-align: baseline; }\n\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n[hidden], template {\n  display: none; }\n\na {\n  background-color: transparent; }\n  a:active, a:hover {\n    outline: 0; }\n\nh1 {\n  font-size: 2em;\n  margin: .67em 0; }\n\nabbr[title] {\n  border-bottom: 1px dotted; }\n\nb, strong {\n  font-weight: 700; }\n\ndfn {\n  font-style: italic; }\n\nmark {\n  background: #ff0;\n  color: #000; }\n\nsmall {\n  font-size: 80%; }\n\nsub, sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -.25em; }\n\nsup {\n  top: -.5em; }\n\nimg {\n  border: 0; }\n\nsvg:not(:root) {\n  overflow: hidden; }\n\nfigure {\n  margin: 0; }\n\nhr {\n  box-sizing: content-box;\n  height: 0; }\n\npre {\n  overflow: auto; }\n\ncode, kbd, pre, samp {\n  font-family: monospace,monospace;\n  font-size: 1em; }\n\nbutton, input, optgroup, select, textarea {\n  color: inherit;\n  font: inherit;\n  margin: 0; }\n\nbutton, html input[type=button] {\n  -webkit-appearance: button;\n  cursor: pointer; }\n\nbutton[disabled], html input[disabled] {\n  cursor: default; }\n\nbutton {\n  overflow: visible;\n  text-transform: none; }\n  button::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\ninput {\n  line-height: normal; }\n  input[type=reset], input[type=submit] {\n    -webkit-appearance: button;\n    cursor: pointer; }\n  input[type=checkbox], input[type=radio] {\n    box-sizing: border-box;\n    padding: 0; }\n  input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {\n    height: auto; }\n  input[type=search] {\n    -webkit-appearance: textfield;\n    box-sizing: content-box; }\n    input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration {\n      -webkit-appearance: none; }\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\noptgroup {\n  font-weight: 700; }\n\nselect {\n  text-transform: none; }\n\ntextarea {\n  overflow: auto; }\n\nfieldset {\n  border: 1px solid silver;\n  margin: 0 2px;\n  padding: .35em .625em .75em; }\n\nlegend {\n  border: 0;\n  padding: 0; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd, th {\n  padding: 0; }\n\n@font-face {\n  font-family: 'fontello';\n  src: url(../fonts/fontello-5b337d96/font/esience-icons.eot);\n  src: url(../fonts/fontello-5b337d96/font/esience-icons.eot#iefix) format(\"embedded-opentype\"), url(../fonts/fontello-5b337d96/font/esience-icons.woff) format(\"woff\"), url(../fonts/fontello-5b337d96/font/esience-icons.ttf) format(\"truetype\"), url(../fonts/fontello-5b337d96/font/esience-icons.svg#fontello) format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n*, *:before, *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box; }\n\nbody {\n  font-weight: 300;\n  color: #4d4d4d;\n  background: #e6e6e6; }\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \"Lato\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  line-height: 1.2; }\n\nh1 {\n  font-size: 32px;\n  font-size: 2rem; }\n\nh2 {\n  font-size: 24px;\n  font-size: 1.5rem; }\n  h2.page-title {\n    font-size: 18px;\n    font-size: 1.125rem;\n    text-transform: uppercase;\n    color: #4d4d4d;\n    padding-bottom: 4px; }\n\nh3 {\n  font-size: 16px;\n  font-size: 1rem; }\n  h3.field-label {\n    color: #4d4d4d;\n    font-size: 15px;\n    font-size: 0.9375rem;\n    text-transform: uppercase; }\n\nb, strong, label {\n  font-weight: 400; }\n\nsmall {\n  font-size: 80%; }\n\nblockquote, q {\n  quotes: none;\n  margin: 0;\n  font-style: italic; }\n\na:link, a:visited, a:active, li a.active {\n  transition: all 250ms ease-in-out;\n  text-decoration: none;\n  color: #034a91;\n  border: none;\n  background-color: transparent; }\n  a:link:hover, a:visited:hover, a:active:hover, li a.active:hover {\n    color: #4d4d4d;\n    outline: 0; }\n\n/* REVISAR */\ntbody, tr.even, tr.odd {\n  background: transparent; }\n\ntable {\n  width: 100%;\n  float: left; }\n  table caption {\n    font-size: 18px;\n    font-size: 1.125rem;\n    border-bottom: 3px solid #140e39;\n    padding-bottom: 0.35em;\n    font-weight: 400; }\n  table thead {\n    font-size: 12px;\n    font-size: 0.75rem; }\n    table thead th {\n      border-bottom: 1px solid #808080;\n      padding: 0.35em 0 .35em;\n      font-weight: 600;\n      color: #4E4E4E; }\n      table thead th a {\n        color: #4E4E4E; }\n    table thead td {\n      border-bottom: 1px solid #808080;\n      padding: 0.35em 0 .35em; }\n  table tbody {\n    border-bottom: 1px solid #808080; }\n    table tbody tr {\n      border-bottom: 1px solid #ddd; }\n      table tbody tr td {\n        padding: .75em 5px;\n        color: #4E4E4E;\n        font-size: 11px;\n        font-size: 0.6875rem; }\n        table tbody tr td a {\n          color: #4E4E4E;\n          text-decoration: none;\n          display: inline-block;\n          margin: 0 .5em 0 0; }\n          table tbody tr td a:hover, table tbody tr td a:active, table tbody tr td a:focus {\n            color: #060410;\n            border: none; }\n      table tbody tr th {\n        font-size: 12px;\n        font-size: 0.75rem;\n        border-bottom: 1px solid #808080;\n        font-weight: 600; }\n  table tfoot td {\n    padding: 0.35em 0 .35em;\n    text-align: left;\n    font-size: 1.25em; }\n  table.calendario-institucional caption {\n    text-align: left; }\n  table.calendario-institucional tbody tr td:first-child {\n    text-align: left; }\n  table.calendario-institucional thead tr:first-child th:first-child {\n    text-align: left; }\n  table.calendario-institucional thead tr th, table.calendario-institucional thead tr td {\n    text-align: center; }\n  table.calendario-institucional tbody tr th, table.calendario-institucional tbody tr td {\n    text-align: center; }\n  table.calendario-institucional.cfh thead tr º\nth:first-child {\n    width: 15%; }\n  table.calendario-institucional.cfh tbody tr td:first-child {\n    width: 15%; }\n\n.view-publications .views-table {\n  margin-bottom: 40px; }\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ninput[type=\"search\"],\ninput[type=\"number\"],\ntextarea,\n.recaptcha_input_area input[type=\"text\"] {\n  box-sizing: border-box;\n  max-width: 100%;\n  padding: 2px 0px 2px 5px;\n  border: 1px solid #808080 !important; }\n  input[type=\"text\"]:focus,\n  input[type=\"email\"]:focus,\n  input[type=\"password\"]:focus,\n  input[type=\"search\"]:focus,\n  input[type=\"number\"]:focus,\n  textarea:focus,\n  .recaptcha_input_area input[type=\"text\"]:focus {\n    outline: none; }\n\ninput[type=\"submit\"] {\n  margin: 0;\n  padding: 6px 8px;\n  box-shadow: none;\n  border: solid 1px #140e39;\n  border-radius: 2px;\n  background: transparent;\n  color: #140e39;\n  transition: all 250ms ease-in-out; }\n  input[type=\"submit\"]:hover {\n    cursor: pointer;\n    background: #140e39;\n    color: #fff; }\n\n.resizable-textarea .grippie {\n  border: 0;\n  background: none; }\n\nfieldset.captcha {\n  padding: 0;\n  border: 0; }\n  fieldset.captcha img#recaptcha_logo,\n  fieldset.captcha .fieldset-legend {\n    display: none; }\n  fieldset.captcha .fieldset-description {\n    padding: 10px 0; }\n\n.node-type-webform .recaptchatable,\n.node-type-webform .recaptchatable #recaptcha_image {\n  border: 0 !important; }\n\n.main-menu {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  list-style-image: none; }\n  .main-menu a {\n    color: #fff;\n    font-size: 17px;\n    font-size: 1.0625rem;\n    font-weight: 500;\n    text-transform: uppercase; }\n  .main-menu li {\n    padding-bottom: 5px; }\n    .main-menu li:nth-child(5) {\n      padding-bottom: 0; }\n  @media (min-width: 768px) {\n    .main-menu li {\n      width: 18.64407%;\n      float: left;\n      margin-right: 1.69492%;\n      text-align: center;\n      padding: 0; }\n      .main-menu li:nth-child(5) {\n        width: 18.64407%;\n        float: right;\n        margin-right: 0; } }\n\n.admin-main-menu {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  list-style-image: none; }\n  .admin-main-menu a {\n    color: #fff;\n    font-size: 15px;\n    font-size: 0.9375rem;\n    font-weight: 500;\n    text-transform: uppercase; }\n  .admin-main-menu li {\n    padding-bottom: 5px; }\n    .admin-main-menu li:nth-child(6) {\n      padding-bottom: 0; }\n  @media (min-width: 768px) {\n    .admin-main-menu li {\n      width: 15.25424%;\n      float: left;\n      margin-right: 1.69492%;\n      padding: 0; }\n      .admin-main-menu li:nth-child(6) {\n        width: 15.25424%;\n        float: right;\n        margin-right: 0; } }\n\n.form-item {\n  padding-bottom: 5px; }\n\ntable img {\n  max-height: 50px; }\n\n.index-container > aside {\n  width: 32.20339%;\n  float: left;\n  margin-right: 1.69492%; }\n  .index-container > aside:nth-child(2) {\n    width: 66.10169%;\n    float: right;\n    margin-right: 0; }\n\n.index-img-container img {\n  height: 300px;\n  width: auto; }\n\n.academic-training-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  list-style-image: none; }\n  .academic-training-list li {\n    text-align: center;\n    border: solid #140e39 1px;\n    width: 49.15254%;\n    float: left;\n    margin-right: 1.69492%; }\n    .academic-training-list li:nth-child(2) {\n      width: 49.15254%;\n      float: right;\n      margin-right: 0; }\n    .academic-training-list li img {\n      max-height: 200px; }\n\n.interest-wrapper .interest {\n  text-align: center;\n  border: solid #140e39 1px;\n  width: 32.20339%;\n  float: left;\n  margin-right: 1.69492%; }\n  .interest-wrapper .interest:nth-child(3) {\n    width: 32.20339%;\n    float: right;\n    margin-right: 0; }\n  .interest-wrapper .interest img {\n    height: 200px; }\n\n.admin-academic-training-list li {\n  padding-bottom: 20px; }\n  .admin-academic-training-list li:nth-child(2) {\n    padding-bottom: 0; }\n\n.project-link {\n  cursor: pointer; }\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden; }\n\n.l-page {\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto; }\n  .l-page:after {\n    content: \" \";\n    display: block;\n    clear: both; }\n\n.l-header:after,\n.l-main:after,\n.l-footer:after {\n  content: \"\";\n  display: table;\n  clear: both; }\n\n.l-header {\n  background: #140e39;\n  position: relative;\n  padding: 20px; }\n\n.l-navigation {\n  position: relative;\n  z-index: 8;\n  overflow: visible; }\n\n.l-main {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding-right: 20px;\n  padding-left: 20px; }\n\n.l-footer {\n  background: #140e39;\n  padding: 20px;\n  color: #fff; }\n","////\n/// Fonts\n/// @group Variables\n////\n\n//----------------------------------------------------------------------\n// Fontello\n//----------------------------------------------------------------------\n@font-face {\n  font-family: 'fontello';\n  src: url(../fonts/fontello-5b337d96/font/esience-icons.eot);\n  src: url(../fonts/fontello-5b337d96/font/esience-icons.eot#iefix) format(\"embedded-opentype\"),\n       url(../fonts/fontello-5b337d96/font/esience-icons.woff) format(\"woff\"),\n       url(../fonts/fontello-5b337d96/font/esience-icons.ttf) format(\"truetype\"),\n       url(../fonts/fontello-5b337d96/font/esience-icons.svg#fontello) format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n\n//----------------------------------------------------------------------\n// Lato\n//----------------------------------------------------------------------\n\n// Lato @import\n//----------------------------------------------\n@import url('https://fonts.googleapis.com/css?family=Lato:300,300italic,400,700,900');\n//light   300\n//Regular 400\n//Bold    700\n//Black   900\n\t\t\n$lato : 'Lato', sans-serif;\n\n\n//----------------------------------------------------------------------\n// Theme font usage\n//----------------------------------------------------------------------\n\n$icon: 'fontello';\n$sans: $lato;\n","// normalize.css v3.0.2 | MIT License | git.io/normalize\n//----------------------------------------------\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\n// HTML5 DISPLAY DEFINITIONS\n//----------------------------------------------\narticle, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {\n  display: block;\n}\n\naudio, canvas, progress, video {\n  display: inline-block;\n  vertical-align: baseline;\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n[hidden], template {\n  display: none;\n}\n\n// LINKS\n//----------------------------------------------\na {\n  background-color: transparent;\n\n  &:active, &:hover {\n    outline: 0;\n  }\n}\n\n// Headings\n//----------------------------------------------\nh1 {\n  font-size: 2em;\n  margin: .67em 0;\n}\n\n// TEXT-LEVEL SEMANTICS\n//----------------------------------------------\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\nb, strong {\n  font-weight: 700;\n}\n\ndfn {\n  font-style: italic;\n}\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub, sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\n// EMBEDDED CONTENT\n//----------------------------------------------\nimg {\n  border: 0;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\nfigure {\n  margin: 0;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\npre {\n  overflow: auto;\n}\n\ncode, kbd, pre, samp {\n  font-family: monospace,monospace;\n  font-size: 1em;\n}\n\n// FORMS\n//----------------------------------------------\nbutton, input, optgroup, select, textarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\nbutton, html input[type=button] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\n\nbutton[disabled], html input[disabled] {\n  cursor: default;\n}\n\nbutton {\n  overflow: visible;\n  text-transform: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n}\n\ninput {\n  line-height: normal;\n\n  &[type=reset], &[type=submit] {\n    -webkit-appearance: button;\n    cursor: pointer;\n  }\n\n  &[type=checkbox], &[type=radio] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n\n  &[type=number] {\n    &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {\n      height: auto;\n    }\n  }\n\n  &[type=search] {\n    -webkit-appearance: textfield;\n    box-sizing: content-box;\n\n    &::-webkit-search-cancel-button, &::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n}\n\noptgroup {\n  font-weight: 700;\n}\n\nselect {\n  text-transform: none;\n}\n\ntextarea {\n  overflow: auto;\n}\n\nfieldset {\n  border: 1px solid silver;\n  margin: 0 2px;\n  padding: .35em .625em .75em;\n}\n\nlegend {\n  border: 0;\n  padding: 0;\n}\n\n// TABLES\n//----------------------------------------------\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd, th {\n  padding: 0;\n}\n","// Susy Box Sizing\n// =================\n\n// Global Box Sizing\n// -----------------\n// Set a box model globally on all elements.\n// - [$box]: border-box | content-box\n// - [$inherit]: true | false\n@mixin global-box-sizing(\n  $box: susy-get(global-box-sizing),\n  $inherit: false\n) {\n  $inspect: $box;\n\n  @if $inherit {\n    @at-root {\n       html { @include output((box-sizing: $box)); }\n       *, *:before, *:after { box-sizing: inherit; }\n     }\n  } @else {\n    *, *:before, *:after { @include output((box-sizing: $box)); }\n  }\n\n  @include susy-inspect(global-box-sizing, $inspect);\n  @include update-box-model($box);\n}\n\n// Border Box Sizing\n// -----------------\n// A legacy shortcut...\n// - [$inherit]: true | false\n@mixin border-box-sizing(\n  $inherit: false\n) {\n  @include global-box-sizing(border-box, $inherit);\n}\n\n// Update Box Model\n// ----------------\n// PRIVATE: Updates global box model setting\n@mixin update-box-model(\n  $box\n) {\n  @if $box != susy-get(global-box-sizing) {\n  @include susy-set(global-box-sizing, $box);\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// TYPOGRAPHY\n//----------------------------------------------\n\n// Global\n//----------------------\nbody {\n  //font-family: $base-font-family;\n  font-weight: $base-font-weight;\n  color: $base-font-color;\n  background: $base-background-color;\n}\n\n// Headers\n//----------------------\nh1, h2, h3, h4, h5, h6 {\n  font-family: $header-font-family;\n  font-weight: $header-font-weight;\n  font-style: normal;\n  line-height: 1.2;\n}\n\nh1 {\n  @include font-size($base-font-size * 2);\n\n}\n\nh2 {\n  @include font-size($base-font-size * 1.5);\n  &.page-title {\n    @include font-size(18px);\n\n    text-transform: uppercase;\n    color: $base-font-color;\n    //border-bottom: 2px solid $color-primary;\n    padding-bottom: 4px;\n  }\n}\n\nh3 {\n  @include font-size($base-font-size * 1);\n  &.field-label {\n    color: $base-font-color;\n    @include font-size(15px);\n    text-transform: uppercase;\n  }\n}\n\n// Body\n//----------------------\np {}\n\nb, strong, label {\n  font-weight: 400;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nblockquote, q {\n  quotes: none;\n  margin: 0;\n  font-style: italic;\n}\n\n// Links\n//----------------------\na:link, a:visited, a:active, li a.active {\n  transition: all 250ms ease-in-out;\n  text-decoration: none;\n  color: $color-link;\n  border: none;\n  background-color: transparent;\n\n  &:hover {\n    color: $color-link-hover;\n    outline: 0;\n  }\n}\n","////\n/// Variables\n/// @group Variables\n////\n\n@import \"fonts\";\n@import \"colors\";\n@import \"icons\";\n\n// Susy\n//----------------------------------------------\n@include border-box-sizing;\n$susy: (\n  columns: 12,\n  //container: 1024px,\n  global-box-sizing: border-box\n);\n\n// Breakpoints\n//----------------------------------------------\n$xs: 380px;\n$s:  560px;\n$m:  768px;\n$l:  960px;\n\n// Colors\n//----------------------------------------------\n\n$color-primary:        \t$cms-blue;\n$color-primary-text:   \t$cms-gray;\n$color-secondary-text: \t$white;\n\n$base-font-color:      \t$cms-gray;\n$base-background-color:\t$cms-silver;\n$color-link:\t\t   \t    $cms-blue-light;\n$color-link-hover:     \t$cms-gray;\n\n// Typography\n//----------------------------------------------\n$base-font-family:   $sans;\n$base-font-weight:   300;\n$base-font-size:     16px;\n$base-line-height:   24px;\n$header-font-family: $sans;\n$header-font-weight: 400;\n","////\n/// Colors\n/// @group Variables\n////\n\n// Social Colors\n//----------------------------------------------\n$facebook:        #3b5998;\n$twitter:        \t#55acee;\n$google:         \t#dd4b39;\n$youtube:        \t#b00;\n$foursquare:     \t#f94877;\n$vimeo:          \t#aad450;\n$instagram:      \t#517fa4;\n\n// cms\n//----------------------------------------------\n\n// Gray scale\n//----------------------\n$white:          \t#fff;        \n$gray:           \t#aaa;\n$black:          \t#111;\n\n// Branding colors\n//----------------------\n$cms-blue:\t\t    #140e39;\n$cms-gray:\t\t    #4d4d4d;\n$cms-silver:      #e6e6e6;\n$cms-red:         #c1272d;\n$cms-blue-light:  #034a91;","////\n/// Mixins\n/// @group Mixins\n////\n\n/// Sets the `with` and `heigh` of an element.\n///\n/// @name Size\n///\n/// @argument {arglist} $values\n///   The with and height of the element.\n///\n/// @example scss\n///   .element {\n///     @include size(20px, 40px);\n///   }\n///\n/// @example css\n///   .element {\n///     width: 20px;\n///     height: 20px;\n///   }\n\n// SIZE\n//----------------------------------------------\n@mixin size($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n// BACKGROUND COLOR\n//----------------------------------------------\n@mixin background-color($color, $important: null) {\n  @if ($important){\n        background-color: $color #{$important};\n        background: $color #{$important};\n    } @else{\n        background-color: $color;\n        background: $color;\n    }\n  \n}\n\n\n// Logo\n//----------------------\n@mixin logo($name, $width: false, $height: false, $position: false) {\n  @include replace-image;\n  display: block;\n  background-image: url(../img/#{$name}.svg);\n  .no-svg & {\n    background-image: url(../img/#{$name}.png);\n  }\n  background-repeat: no-repeat;\n  @if $width {\n    width: $width;\n  }\n  @if $height {\n    height: $height;\n  }\n  @if $position {\n    background-position: $position;\n  }\n}\n\n\n// IMAGES\n//----------------------------------------------\n\n// Image replacement\n//----------------------\n@mixin replace-image {\n  overflow: hidden;\n  white-space: nowrap;\n  text-indent: 100%;\n}\n\n// SVG background image with PNG fallback\n//----------------------\n@mixin bg-img($name, $size: false) {\n  background-image: url(../img/#{$name}.svg);\n  @if $size {\n    background-size: $size;\n  }\n  .no-svg & {\n    background-image: url(../img/#{$name}.png);\n  }\n}\n\n// CLEARFIX\n//----------------------------------------------\n@mixin clearfix {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n// FONT SIZE\n//----------------------------------------------\n@mixin font-size($font-size) {\n  font-size: $font-size;\n  font-size: $font-size / $base-font-size * 1rem;\n}\n\n\n\n// LISTS RESET\n//----------------------\n@mixin list-reset {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  list-style-image: none;\n}\n\n// INLINE BLOCK\n//----------------------------------------------\n@mixin inline-block {\n  display: inline-block;\n  *display: inline;\n  vertical-align: middle;\n  zoom: 1;\n}\n\n\n// ICONS\n//----------------------------------------------\n\n\n// Icon Before\n//----------------------\n@mixin icon-before($content) {\n  @include icon-settings(before);\n  &:before {\n    content: icon($content);\n  }\n}\n\n\n\n// Icon After\n//----------------------\n@mixin icon-after($content) {\n  @include icon-settings(after);\n  &:after {\n    content: icon($content);\n  }\n}\n\n\n// Icon Before Settings\n//----------------------\n@mixin icon-settings ($attribute){\n  &:#{$attribute} {\n    @include inline-block;\n    vertical-align: baseline !important;\n    font: {\n      family: $icon;\n      style: normal;\n      weight: normal;\n      variant: normal;\n    };\n    text: {\n      decoration: inherit;\n      transform: none;\n    };\n    speak: none;\n    line-height: 1em;\n    width: 1em;\n    margin-right: 5px;\n  }\n}\n\n\n// BUTTONS\n//----------------------------------------------\n@mixin btn($color) {\n  @extend %btn;\n  a {\n    background: $color;\n    border-bottom: 2px solid darken($color, 10%);\n    &:hover {\n      background: darken($color, 10%);\n    }\n  }\n}\n","// TABLES\n//----------------------------------------------\n// TABLES\n//----------------------------------------------\n\n/* REVISAR */\n\ntbody, tr.even, tr.odd {\n  background: transparent;\n}\n\ntable {\n  width: 100%;\n  float: left;\n  //margin: 0 0 2em;\n\n  caption {\n    @include font-size(18px);\n    border-bottom: 3px solid $cms-blue;\n    padding-bottom: 0.35em;\n    font-weight: 400;\n  }\n\n  thead {\n    @include font-size(12px);\n    th {\n      //text-align: center;\n      border-bottom: 1px solid #808080;\n      padding: 0.35em 0 .35em;\n      font-weight: 600;\n      color:#4E4E4E;\n      a {\n        color:#4E4E4E;\n      }\n    }\n    td {\n      //text-align: center;\n      border-bottom: 1px solid #808080;\n      padding: 0.35em 0 .35em;\n    }\n  }\n\n  tbody {\n    border-bottom: 1px solid #808080;\n    //text-align: center;\n    tr {\n      border-bottom: 1px solid #ddd;\n      td {\n        padding: .75em 5px;\n        color:#4E4E4E;\n        @include font-size(11px);\n        a {\n          color:#4E4E4E;\n          text-decoration: none;\n          display: inline-block;\n          margin: 0 .5em 0 0;\n          &:hover, &:active, &:focus {\n            color: darken($cms-blue, 10%);\n            border: none;\n          }\n        }\n\n      }\n      th {\n        @include font-size(12px);\n        // text-align: center;\n        border-bottom: 1px solid #808080;\n        font-weight: 600;\n      }\n    }\n  }\n\n  tfoot {\n    td {\n      padding: 0.35em 0 .35em;\n      text-align: left;\n      font-size: 1.25em;\n    }\n  }\n\n  &.calendario-institucional {\n    caption {\n      text-align: left;\n    }\n    tbody tr {\n      td:first-child {\n        text-align: left;\n      }\n    }\n    thead tr:first-child {\n      th:first-child {\n        text-align: left;\n      }\n    }\n    thead tr {\n      th, td {\n        text-align: center;\n      }\n    }\n    tbody tr {\n      th, td {\n        text-align: center;\n      }\n    }\n    &.cfh {\n      thead tr {º\n        th:first-child {\n          width: 15%;\n        }\n      }\n      tbody tr {\n        td:first-child {\n          width: 15%;\n        }\n      }\n    }\n  }\n}\n\n.view-publications {\n  .views-table {\n    margin-bottom: 40px;\n  }\n}\n","// FORMS\n//----------------------------------------------\n\n// Input\n//----------------------\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ninput[type=\"search\"],\ninput[type=\"number\"],\ntextarea,\n.recaptcha_input_area input[type=\"text\"] {\n  box-sizing: border-box;\n  max-width: 100%;\n  padding: 2px 0px 2px 5px;\n  border: 1px solid #808080 !important;\n  &:focus {\n    outline: none;\n  }\n}\n\n// Submit Buttons\n//----------------------\ninput[type=\"submit\"] {\n  // @include font-size(16px);\n  margin: 0;\n  padding: 6px 8px;\n  box-shadow: none;\n  border: solid 1px $cms-blue;\n  border-radius: 2px;\n  background: transparent;\n  color: $cms-blue;\n  transition: all 250ms ease-in-out;\n  &:hover {\n    cursor: pointer;\n    background: $cms-blue;\n    color: #fff;\n  }\n}\n\n// Text areas\n//----------------------\n.resizable-textarea .grippie {\n  border: 0;\n  background: none;\n}\n\n// Captcha\n//----------------------\nfieldset.captcha {\n  padding: 0;\n  border: 0;\n\n  img#recaptcha_logo,\n  .fieldset-legend {\n    display: none;\n  }\n\n  .fieldset-description {\n    padding: 10px 0;\n  }\n}\n\n// Webforms\n//----------------------\n.node-type-webform {\n  .recaptchatable,\n  .recaptchatable #recaptcha_image {\n    border: 0 !important;\n  }\n}\n\n// Required fields\n//----------------------\n.marker, .form-required {\n  // color: red;\n}\n\n\n\n\n\n\n\n\n\n\n\n","//MAIN MENU BLOCK\n\n.main-menu {\n  //GLOBAL STYLES\n  a {\n    color: $white;\n    @include font-size(17px);\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n  @include list-reset;\n\n\n  //MOBILE STYLES\n  li {\n    padding-bottom: 5px;\n    &:nth-child(5) {\n      padding-bottom: 0;\n    }\n  }\n  \n\n  //DESKTOP STYLES\n  @include breakpoint($m) {\n    li {\n      @include span (2.4);\n      text-align: center;\n      padding: 0;\n      &:nth-child(5) {\n        @include span (2.4 last);\n      }\n    }\n  }\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","//MAIN MENU BLOCK\n\n.admin-main-menu {\n  //GLOBAL STYLES\n  a {\n    color: $white;\n    @include font-size(15px);\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n  @include list-reset;\n\n\n  //MOBILE STYLES\n  li {\n    padding-bottom: 5px;\n    &:nth-child(6) {\n      padding-bottom: 0;\n    }\n  }\n  \n\n  //DESKTOP STYLES\n  @include breakpoint($m) {\n    li {\n      @include span (2);\n      padding: 0;\n      &:nth-child(6) {\n        @include span (2 last);\n      }\n    }\n  }\n}","//PUBLIC FORM STYLES\n.form-item {\n  padding-bottom: 5px;\n}\n\ntable {\n  img {\n    max-height: 50px;\n  }\n}\n\n\n\n//PUBLIC HOME STYLES\n\n.index-container > aside {\n  @include span (4);\n  &:nth-child(2) {\n    @include span (8 last);\n  }\n\n}\n\n.index-img-container {\n  img {\n    height: 300px;\n    width: auto;\n  }\n}\n\n\n//PUBLIC ACADEMIC TRAINING STYLES\n\n.academic-training-list {\n  @include list-reset;\n\n  li {\n    text-align: center;\n    border: solid $cms-blue 1px;\n    @include span (6);\n    &:nth-child(2) {\n      @include span (6 last);\n    }\n\n    img {\n      max-height: 200px;\n    }\n\n  }\n}\n\n//PUBLIC SELFT INTERESTS STYLES\n\n.interest-wrapper {\n  .interest {\n    text-align: center;\n    border: solid $cms-blue 1px;\n    @include span (4);\n    &:nth-child(3) {\n      @include span (4 last);\n    }\n\n    img {\n      height: 200px;\n    }\n  }\n}\n\n\n//ADMIN ACADEMIC TRAINING STYLES\n\n.admin-academic-training-list {\n  li {\n    padding-bottom: 20px;\n    &:nth-child(2) {\n      padding-bottom: 0;\n    }\n  }\n}\n\n.project-link {\n  cursor: pointer;\n}","// GLOBAL\n//----------------------------------------------\nhtml, body {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n}\n\n.l-page{\n  @include container;\n}\n\n.l-header,\n.l-main,\n.l-footer {\n  @include clearfix;\n}\n\n// HEADER\n//----------------------\n.l-header {\n  background: $cms-blue;\n  position: relative;\n  padding: 20px;\n\n}\n\n// NAVIGATION\n//----------------------\n.l-navigation {\n  position: relative;\n  z-index: 8;\n  overflow: visible;\n  //float: right;\n  //@include span (last 9)\n}\n\n// MAIN\n//----------------------\n.l-main {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  //.not-front & {\n    padding-right: 20px;\n    padding-left: 20px;\n  //}\n}\n\n\n\n\n// FOOTER\n//----------------------\n.l-footer {\n  background: $cms-blue;\n  padding: 20px;\n  color: $white;\n\n}\n\n\n// BREAKPOINT MEDIUM\n//----------------------------------------------\n@include breakpoint($m) {\n\n\n}\n\n// BREAKPOINT LARGE\n//----------------------------------------------\n@include breakpoint($l) {\n\n  // SIDEBARS\n  \n  \n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n"]}